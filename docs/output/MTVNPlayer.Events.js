Ext.data.JsonP.MTVNPlayer_Events({"parentMixins":[],"alternateClassNames":[],"tagname":"class","singleton":false,"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"html_meta":{},"mixins":[],"code_type":"assignment","inheritable":false,"requires":[],"meta":{},"files":[{"href":"api.html#MTVNPlayer-Events","filename":"api.js"}],"members":{"cfg":[],"method":[],"property":[],"css_var":[],"event":[{"owner":"MTVNPlayer.Events","tagname":"event","meta":{"private":true},"name":"airplay","id":"event-airplay"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{},"name":"fullScreenChange","id":"event-fullScreenChange"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{},"name":"indexChange","id":"event-indexChange"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{},"name":"mediaEnd","id":"event-mediaEnd"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{},"name":"mediaStart","id":"event-mediaStart"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{},"name":"metadata","id":"event-metadata"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{"deprecated":{"text":"Use {@link MTVNPlayer.Events#uiStateChange} instead","version":"1.5.0"}},"name":"onOverlayRectChange","id":"event-onOverlayRectChange"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{"private":true},"name":"performance","id":"event-performance"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{},"name":"playheadUpdate","id":"event-playheadUpdate"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{},"name":"playlistComplete","id":"event-playlistComplete"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{},"name":"ready","id":"event-ready"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{},"name":"stateChange","id":"event-stateChange"},{"owner":"MTVNPlayer.Events","tagname":"event","meta":{},"name":"uiStateChange","id":"event-uiStateChange"}],"css_mixin":[]},"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/api.html#MTVNPlayer-Events' target='_blank'>api.js</a></div></pre><div class='doc-contents'><p>Events dispatched by <a href=\"#!/api/MTVNPlayer.Player\" rel=\"MTVNPlayer.Player\" class=\"docClass\">MTVNPlayer.Player</a>.</p>\n\n<p>All events have a target property (event.target) which is the player that dispatched the event.\nSome events have a data property (event.data) which contains data specific to the event.</p>\n\n<h1>How to listen to events</h1>\n\n<p>Attached to player instance via <a href=\"#!/api/MTVNPlayer.Player-method-on\" rel=\"MTVNPlayer.Player-method-on\" class=\"docClass\">MTVNPlayer.Player.on</a>:</p>\n\n<pre><code> player.on(\"metadata\",function(event) {\n        var metadata = event.data;\n     }\n });\n</code></pre>\n\n<p>Passed in as an Object to the constructor <a href=\"#!/api/MTVNPlayer.Player\" rel=\"MTVNPlayer.Player\" class=\"docClass\">MTVNPlayer.Player</a>:</p>\n\n<pre><code> var player = new <a href=\"#!/api/MTVNPlayer.Player\" rel=\"MTVNPlayer.Player\" class=\"docClass\">MTVNPlayer.Player</a>(\"video-player\",config,{\n         metadata:function(event) {\n             var metadata = event.data;\n         }\n });\n</code></pre>\n\n<p>Passed as an Object into <a href=\"#!/api/MTVNPlayer-method-createPlayers\" rel=\"MTVNPlayer-method-createPlayers\" class=\"docClass\">MTVNPlayer.createPlayers</a></p>\n\n<pre><code> <a href=\"#!/api/MTVNPlayer-method-createPlayers\" rel=\"MTVNPlayer-method-createPlayers\" class=\"docClass\">MTVNPlayer.createPlayers</a>(\"div.MTVNPlayer\",config,{\n         metadata:function(event) {\n             var metadata = event.data;\n             // player that dispatched the event\n             var player = event.target;\n             var uri = event.target.config.uri;\n         }\n });\n</code></pre>\n\n<p>Attached to player from <a href=\"#!/api/MTVNPlayer-method-onPlayer\" rel=\"MTVNPlayer-method-onPlayer\" class=\"docClass\">MTVNPlayer.onPlayer</a></p>\n\n<pre><code> <a href=\"#!/api/MTVNPlayer-method-onPlayer\" rel=\"MTVNPlayer-method-onPlayer\" class=\"docClass\">MTVNPlayer.onPlayer</a>(function(player){\n         player.on(\"metadata\",function(event) {\n             var metadata = event.data;\n         }\n });\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-airplay' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-airplay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-airplay' class='name expandable'>airplay</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Fired when the airplay button is clicked ...</div><div class='long'><p>Fired when the airplay button is clicked</p>\n</div></div></div><div id='event-fullScreenChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-fullScreenChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-fullScreenChange' class='name expandable'>fullScreenChange</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>(HTML5 only, until 2.11.x and Prime 2.7.15)\nFired when the player.isFullScreen property has been changed. ...</div><div class='long'><p>(HTML5 only, until 2.11.x and Prime 2.7.15)\nFired when the player.isFullScreen property has been changed.\nThe player may or may not visually be in full screen, it depends on its context.\nCheck <a href=\"#!/api/MTVNPlayer.Player-property-isFullScreen\" rel=\"MTVNPlayer.Player-property-isFullScreen\" class=\"docClass\">MTVNPlayer.Player.isFullScreen</a> to see if the player is in full screen or not.</p>\n</div></div></div><div id='event-indexChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-indexChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-indexChange' class='name expandable'>indexChange</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Fired when the index of the current playlist item changes, ignoring ads. ...</div><div class='long'><p>Fired when the index of the current playlist item changes, ignoring ads.</p>\n\n<p>event.data contains the index</p>\n</div></div></div><div id='event-mediaEnd' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-mediaEnd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-mediaEnd' class='name expandable'>mediaEnd</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Fired when a playlist item ends, this includes its prerolls and postrolls ...</div><div class='long'><p>Fired when a playlist item ends, this includes its prerolls and postrolls</p>\n</div></div></div><div id='event-mediaStart' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-mediaStart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-mediaStart' class='name expandable'>mediaStart</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Fired once per playlist item (content + ads/bumpers). ...</div><div class='long'><p>Fired once per playlist item (content + ads/bumpers).</p>\n</div></div></div><div id='event-metadata' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-metadata' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-metadata' class='name expandable'>metadata</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Fired when the metadata changes. ...</div><div class='long'><p>Fired when the metadata changes. event.data is the metadata. Also see <a href=\"#!/api/MTVNPlayer.Player-property-currentMetadata\" rel=\"MTVNPlayer.Player-property-currentMetadata\" class=\"docClass\">MTVNPlayer.Player.currentMetadata</a>.</p>\n\n<pre><code> player.on(\"metadata\",function(event) {\n     // inspect the metadata object to learn more (documentation on metadata is in progress)\n     console.log(\"metadata\",event.data);\n\n     // at anytime after the MTVNPlayer.Events#READY,\n     // you can access the metadata on the player directly at <a href=\"#!/api/MTVNPlayer.Player-property-currentMetadata\" rel=\"MTVNPlayer.Player-property-currentMetadata\" class=\"docClass\">MTVNPlayer.Player.currentMetadata</a>\n     console.log(event.data === player.currentMetadata); // true\n });\n</code></pre>\n</div></div></div><div id='event-onOverlayRectChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-onOverlayRectChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-onOverlayRectChange' class='name expandable'>onOverlayRectChange</a>( <span class='pre'></span> )<strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Fired when the GUI appears, event.data contains an {Object} {x:0,y:0,width:640,height:320} ...</div><div class='long'><p>Fired when the GUI appears, event.data contains an {Object} {x:0,y:0,width:640,height:320}</p>\n        <div class='signature-box deprecated'>\n        <p>This event has been <strong>deprecated</strong> since 1.5.0</p>\n        <p>Use <a href=\"#!/api/MTVNPlayer.Events-event-uiStateChange\" rel=\"MTVNPlayer.Events-event-uiStateChange\" class=\"docClass\">uiStateChange</a> instead</p>\n\n        </div>\n</div></div></div><div id='event-performance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-performance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-performance' class='name expandable'>performance</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Fired when performance data has been collected. ...</div><div class='long'><p>Fired when performance data has been collected.</p>\n</div></div></div><div id='event-playheadUpdate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-playheadUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-playheadUpdate' class='name expandable'>playheadUpdate</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Fired as the playhead moves. ...</div><div class='long'><p>Fired as the playhead moves. event.data is the playhead time.</p>\n\n<p>Support for cue points (v2.5.0).\nThe below snippet fires once when the playhead crosses the 15 second mark.\nThe playhead time itself may be 15 plus a fraction.\n<code>\nplayer.one(\"playheadUpdate:15\",function(event){\n // callback\n});\n</code></p>\n</div></div></div><div id='event-playlistComplete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-playlistComplete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-playlistComplete' class='name expandable'>playlistComplete</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Fired at the end of a playlist ...</div><div class='long'><p>Fired at the end of a playlist</p>\n</div></div></div><div id='event-ready' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-ready' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-ready' class='name expandable'>ready</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Fired when the player has loaded and the metadata is available. ...</div><div class='long'><p>Fired when the player has loaded and the metadata is available.\nYou can bind/unbind to events before this fires.\nYou can also invoke most methods before the event, the only exception is\n<a href=\"#!/api/MTVNPlayer.Player-method-getEmbedCode\" rel=\"MTVNPlayer.Player-method-getEmbedCode\" class=\"docClass\">MTVNPlayer.Player.getEmbedCode</a>, since it returns a value which\nwon't be ready until the metadata is ready. Other methods will be queued and\nthen executed when the player is ready to invoke them.</p>\n</div></div></div><div id='event-stateChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-stateChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-stateChange' class='name expandable'>stateChange</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Fired when the play state changes. ...</div><div class='long'><p>Fired when the play state changes. event.data is the state.</p>\n\n<p>You can also listen for a specific state only (v2.5.0).\n<code>\nplayer.on(\"stateChange:paused\",function(event){\n // callback fires when state equals paused.\n});\n</code></p>\n</div></div></div><div id='event-uiStateChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='MTVNPlayer.Events'>MTVNPlayer.Events</span><br/><a href='source/api.html#MTVNPlayer-Events-event-uiStateChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/MTVNPlayer.Events-event-uiStateChange' class='name expandable'>uiStateChange</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Fired when the UI changes its state, ususally due to user interaction, or lack of. ...</div><div class='long'><p>Fired when the UI changes its state, ususally due to user interaction, or lack of.</p>\n\n<p>event.data will contain information about the state.\n- data.active <code>Boolean</code>: If true, user has activated the UI by clicking or touching.\nIf false, the user has remained idle with out interaction for a predetermined amount of time.\n- data.overlayRect <code>Object</code>: the area that is not obscured by the GUI, a rectangle such as <code>{x:0,y:0,width:640,height:320}</code></p>\n</div></div></div></div></div></div></div>","component":false,"aliases":{},"inheritdoc":null,"superclasses":[],"name":"MTVNPlayer.Events","uses":[],"mixedInto":[],"subclasses":[],"id":"class-MTVNPlayer.Events","extends":null});